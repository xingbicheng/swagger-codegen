{{>licenseInfo}}
import request from '@/utils/midway-request';
{{^models.isEmpty}}
import type * as models from '../model/models';
{{/models.isEmpty}}

/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */

{{#operations}}
{{>params}}
{{#description}}
/**
 * @description {{&description}}
 */
{{/description}}
  const basePath = '{{{contextPath}}}'.replace(/\/$/, '');
  

{{#operation}}
  /**
   * {{&notes}}
   {{#summary}}
   * @summary {{&summary}}
   {{/summary}}
   {{#description}}
   * @description {{&description}}
   {{/description}}
   {{#allParams.0}}{{^hasOnlyBodyParams}}* @param params Params{{nickname}}{{/hasOnlyBodyParams}}{{/allParams.0}}
   {{#bodyParam}}* @param param: Params{{nickname}}{{#description}}// {{&description}}{{/description}}{{/bodyParam}}
   * @returns {{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}{}{{/returnType}}
   */
   export const {{nickname}} =
    async (
      param: Params{{#titlecase}}{{nickname}}{{/titlecase}},
    ) => {
      const path = '';
      const url = basePath + path;
      return request<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}{}{{/returnType}}>(
        {
          url,
          data: { param },
        },
      );
    };
{{/operation}}
{{/operations}}